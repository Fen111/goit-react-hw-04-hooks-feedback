{"version":3,"sources":["components/Statistics/Statistics.module.css","components/App/App.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","container","map","item","feedbackButton","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","onReset","statList","statItem","statButton","Section","title","children","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","reduce","acc","value","countTotal","summFeedback","Math","round","countPositiveFeedbackPercentage","option","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,6BAA6B,WAAa,iC,gBCA/GD,EAAOC,QAAU,CAAC,UAAY,yB,kBCA9BD,EAAOC,QAAU,CAAC,eAAiB,0C,iBCAnCD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,8HCClB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAI,OACf,wBACEJ,UAAWC,IAAEI,eACbC,KAAK,SAELC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GAHIA,Q,oBCNA,SAASI,EAAT,GAOX,IANFC,EAMC,EANDA,KACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,QAEA,OACE,qCACE,qBAAId,UAAWC,IAAEc,SAAjB,UACE,qBAAIf,UAAWC,IAAEe,SAAjB,mBAAkCP,KAClC,qBAAIT,UAAWC,IAAEe,SAAjB,sBAAqCN,KACrC,qBAAIV,UAAWC,IAAEe,SAAjB,kBAAiCL,KACjC,qBAAIX,UAAWC,IAAEe,SAAjB,oBAAmCJ,KACnC,qBAAIZ,UAAWC,IAAEe,SAAjB,gCAA+CH,EAA/C,UAEF,wBAAQb,UAAWC,IAAEgB,WAAYX,KAAK,SAASC,QAASO,EAAxD,sB,oBCjBS,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,oBAAIpB,UAAWC,IAAEkB,MAAjB,SAAyBA,IACxBC,K,oBCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGtB,UAAWC,IAAEsB,aAAhB,SAA+BD,I,oBCGzB,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOd,EAAP,KAAYiB,EAAZ,KAEMC,EAAqB,WAGzB,MAFwB,CAACpB,EAAMC,EAASC,GACHmB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IA0BrEC,EAAaJ,IACbhB,EAvBkC,WACtC,IAAMqB,EAAeL,IACrB,OAAOM,KAAKC,MAAO3B,EAAOyB,EAAgB,KAqBjBG,GAE3B,OACE,sBAAKrC,UAAWC,IAAEC,UAAlB,UACE,cAACgB,EAAD,CAASlB,UAAWC,IAAEkB,MAAOA,MAAM,wBAAnC,SACE,cAACtB,EAAD,CACEC,QARe,CAAC,OAAQ,UAAW,OASnCC,gBAzBgB,SAAAuC,GACP,SAAXA,GACFZ,GAAQ,SAAAa,GAAK,OAAIA,EAAQ,KAGZ,YAAXD,GAAsBX,GAAW,SAAAY,GAAK,OAAIA,EAAQ,KAEvC,QAAXD,GAAkBV,GAAO,SAAAW,GAAK,OAAIA,EAAQ,UAqB5C,cAACrB,EAAD,CAASlB,UAAWC,IAAEkB,MAAOA,MAAM,aAAnC,SACkB,IAAfc,EACC,cAACzB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,mBAAoBA,EACpBC,QA1BS,WACjBY,EAAQ,GACRC,EAAW,GACXC,EAAO,MA0BD,cAACP,EAAD,CAAcC,QAAQ,8B,YCxDhCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,W","file":"static/js/main.e310eefb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__17cPv\",\"statItem\":\"Statistics_statItem__KAFIq\",\"statButton\":\"Statistics_statButton__2OHF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Tb_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__38LBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__13Wqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__36-mG\"};","import s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {options.map(item => (\r\n        <button\r\n          className={s.feedbackButton}\r\n          type=\"button\"\r\n          key={item}\r\n          onClick={() => onLeaveFeedback(item)}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  onReset,\r\n}) {\r\n  return (\r\n    <>\r\n      <ul className={s.statList}>\r\n        <li className={s.statItem}>good: {good}</li>\r\n        <li className={s.statItem}>neutral: {neutral}</li>\r\n        <li className={s.statItem}>bad: {bad}</li>\r\n        <li className={s.statItem}>Total: {total}</li>\r\n        <li className={s.statItem}>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n      <button className={s.statButton} type=\"button\" onClick={onReset}>\r\n        Clear\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.notification}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n}","import { useState } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countTotalFeedback = () => {\r\n    const stateArrayValue = [good, neutral, bad];\r\n    const summFeedback = stateArrayValue.reduce((acc, value) => acc + value, 0);\r\n    return summFeedback;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const summFeedback = countTotalFeedback();\r\n    return Math.round((good / summFeedback) * 100);\r\n  };\r\n\r\n  const onLeaveFeedback = option => {\r\n    if (option === 'good') {\r\n      setGood(state => state + 1);\r\n    }\r\n\r\n    if (option === 'neutral') setNeutral(state => state + 1);\r\n\r\n    if (option === 'bad') setBad(state => state + 1);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setGood(0);\r\n    setNeutral(0);\r\n    setBad(0);\r\n  };\r\n\r\n  const stateArrayKeys = ['good', 'neutral', 'bad'];\r\n  const countTotal = countTotalFeedback();\r\n  const positivePercentage = countPositiveFeedbackPercentage();\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <Section className={s.title} title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={stateArrayKeys}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      </Section>\r\n      <Section className={s.title} title=\"Statistics\">\r\n        {countTotal !== 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotal}\r\n            positivePercentage={positivePercentage}\r\n            onReset={resetState}\r\n          />\r\n        ) : (\r\n          <Notification message=\"There is no feedback\" />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   countTotalFeedback() {\r\n//     const stateArrayValue = Object.values(this.state);\r\n//     const summFeedback = stateArrayValue.reduce((acc, value) => acc + value, 0);\r\n//     return summFeedback;\r\n//   }\r\n\r\n//   countPositiveFeedbackPercentage() {\r\n//     const summFeedback = this.countTotalFeedback();\r\n//     return Math.round((this.state.good / summFeedback) * 100);\r\n//   }\r\n\r\n//   onLeaveFeedback = option => {\r\n//     this.setState(prevState => {\r\n//       return {\r\n//         [option]: prevState[option] + 1,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   resetState = () => {\r\n//     this.setState({\r\n//       good: 0,\r\n//       neutral: 0,\r\n//       bad: 0,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const stateArrayKeys = Object.keys(this.state);\r\n//     const countTotal = this.countTotalFeedback();\r\n//     const { good, neutral, bad } = this.state;\r\n//     const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n//     return (\r\n//       <div className={s.container}>\r\n//         <Section className={s.title} title=\"Please leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={stateArrayKeys}\r\n//             onLeaveFeedback={this.onLeaveFeedback}\r\n//           />\r\n//         </Section>\r\n//         <Section className={s.title} title=\"Statistics\">\r\n//           {countTotal !== 0 ? (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={countTotal}\r\n//               positivePercentage={positivePercentage}\r\n//               onReset={this.resetState}\r\n//             />\r\n//           ) : (\r\n//             <Notification message=\"There is no feedback\" />\r\n//           )}\r\n//         </Section>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App.jsx';\r\nimport 'modern-normalize';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}